const APPConfig = {
  // Base URL for the API
  API_URL: process.env.REACT_APP_API_URL || "http://localhost:5001/api", // Use environment variable or fallback to local
};

// Helper function to construct API endpoints
const createEndpoint = (path) => `${APPConfig.API_URL}${path}`;

const ApiEndPoints = {
  AddReportData: createEndpoint("/report/add-report-data"),
  Assignments: createEndpoint("/assignments"),
  AssignmentReports: createEndpoint("/assignment-reports"),
  ActivityLogs: createEndpoint('/activity-logs'),
  AsynConnector: createEndpoint("/connector/share-connector"),
  AddDashboardData: createEndpoint("/dashboard/add-dashborad-data"),
  ActiveConnector: createEndpoint("/connector/activate-connector"),
  AsynConnectorUser: createEndpoint("/connector/shareConnectorToUser"),
  AzureAD: createEndpoint("/auth/azure-ad"),
  AuthForgot: createEndpoint("/auth/forgot"),
  AuthPasswordResetRequests: createEndpoint("/auth/password-reset-requests"),
  ChangeLanguage: createEndpoint("/connector/change-language"),
  CommonData: createEndpoint('/common-data'),
  ConnectorList: createEndpoint("/connector/connector-list"),
  ConnecterDelete: createEndpoint("/connector/delete-connector"),
  Connector: createEndpoint("/connector"),
  ConnectorInsert: createEndpoint("/connector/insert-multi-connector"),
  ConnectorConfig: createEndpoint("/connector/add-connector-config"),
  ConnectorScheduler: createEndpoint("/connector/schedule"),
  ConnectorLog: createEndpoint("/connector/connector-log"),
  ConnectorConfigDetail: createEndpoint("/connector/connector-config-detail"),
  ConnecterDeleteTenant: createEndpoint("/connector/delete-connectorByTenant"),
  ConformityChecks: createEndpoint("/elastic/conformity-new-checks"),
  ContainerRuntimeSensor: createEndpoint("/elastic/container-runtime-sensor"),
  ContainerEvaluation: createEndpoint("/elastic/container-evaluation"),
  ContainerRuntimeVulnerabilityView: createEndpoint("/elastic/container-runtime-vulnerability-view"),
  Countries: createEndpoint("/countries"),
  CreateReport: createEndpoint("/report/create-report"),
  CSVCompilanceData: createEndpoint("/elastic/cveReport"),
  CVESearch: createEndpoint("/elastic/cveSearch"),
  Customers: createEndpoint('/customers'),
  ConnectorParameterSave: createEndpoint("/connector/connector-parameter-save"),
  DSMList: createEndpoint("/elastic/dsmlist"),
  DeleteReportData: createEndpoint("/report/delete-report-data"),
  DeleteDashboard: createEndpoint("/dashboard/delete-dashboard"),
  DeleteReport: createEndpoint("/report/delete-report"),
  DeleteData: createEndpoint("/dashboard/delete-dashborad-data"),
  DeleteIndex: createEndpoint("/elastic/data/index"),
  ElasticIndexList: createEndpoint("/elastic/dataSource"),
  ElasticData: createEndpoint("/elastic/data/"),
  EmailScheduler: createEndpoint("/schedule/email-report"),
  FileList: createEndpoint("/document/document-list"),
  FileGet: createEndpoint("/document/get-document/"),
  FileDelete: createEndpoint("/document/delete-document"),
  GetDashboardData: createEndpoint("/dashboard/get-dashborad-data"),
  GetReportData: createEndpoint("/report/get-report-data"),
  GetReportList: createEndpoint("/report/get-report"),
  HostCompilanceData: createEndpoint("/elastic/hostCompilance"),
  InstallConnector: createEndpoint("/upload-connector"),
  InsertMultiConnector: createEndpoint("/connector/insert-multi-connector"),
  Login: createEndpoint("/auth/login"),
  MasterList: createEndpoint("/master/list"),
  Me: createEndpoint("/users/me"),
  MurgeReort: createEndpoint("/report/merge-report"),
  Register: createEndpoint('/auth/register'),
  Report: createEndpoint("/report"),
  RegistriesList: createEndpoint("/elastic/smart-check-registries-list"),
  SearchData: createEndpoint("/elastic/data/search"),
  SmartScanDetail: createEndpoint("/elastic/smart-scan-detail"),
  TenantAddUpdate: createEndpoint("/master/add-update-tenant"),
  TenantList: createEndpoint("/tenant/user-list"),
  Teams: createEndpoint("/teams"),
  Updates: createEndpoint("/updates"),
  Users: createEndpoint('/users'),
  UserAddUpdate: createEndpoint("/tenant/add-update-user"),
  UserDelete: createEndpoint("/tenant/delete-user"),
  UserCreateDashboard: createEndpoint("/dashboard/create-dashboard"),
  UserDashbordList: createEndpoint("/dashboard/get-dashboard"),
  UserConnnectorList: createEndpoint("/connector/connectorListForUser"),
  UpdateReportData: createEndpoint("/report/edit-report-data"),
  UpdateDashboard: createEndpoint("/dashboard/update-dashboard"),
  UpdateDashboardTitle: createEndpoint("/dashboard/update-table-title"),
  UpdateReport: createEndpoint("/report/update-report"),
  UpdateReportTitle: createEndpoint("/report/update-reportTable-title"),
  UploadConnector: createEndpoint("/upload-connector?"),
  UploadFileData: createEndpoint("/document/upload-document"),
  // New CSV Upload endpoint
  // FileGet: "/api/file-get",
  UploadDocument: "/api/document/upload-document",
};

export default ApiEndPoints;
